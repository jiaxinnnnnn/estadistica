install.packages("data.table")  #instalar paquete necesario

setwd("~/Documents") #MI DIRECTORIO, CAMBIA AL ADECUADO

library(data.table)
datos <- fread("Top_1000_Highest_Grossing_Movies.csv") #importar con formateo automatico
datos

#ORGANIZAR DATOS

datos_puntuacion = datos$`Movie Rating`
datos_puntuacion #todos los datos de puntuaciones(1-10) en float

datos_puntuacion_duracion_larga = datos[(datos$Duration >= "120")]$`Movie Rating`
datos_puntuacion_duracion_larga # todos los datos de puntuaciones que cumplen con duracion>=120 min

datos_puntuacion_duracion_corta = datos[(datos$Duration < "120")]$`Movie Rating`
datos_puntuacion_duracion_corta # todos los datos de puntuaciones que cumplen con duracion<120 min

length(datos_puntuacion_duracion_larga) # numero de datos(pelis que duran mas de 120)
length(datos_puntuacion_duracion_corta) # numero de datos(pelis que duran menos de 120)

#CALCULAR MEDIDAS ESTADISTICAS

#Centralizacion

#media
mean(datos_puntuacion)
mean(datos_puntuacion_duracion_larga)
mean(datos_puntuacion_duracion_corta)

#mediana
median(datos_puntuacion)
median(datos_puntuacion_duracion_larga)
median(datos_puntuacion_duracion_corta)

#moda
install.packages("modeest")
library(modeest) 
mlv(datos_puntuacion, method="mfv") 
mlv(datos_puntuacion_duracion_larga,method="mfv")
mlv(datos_puntuacion_duracion_corta, method="mfv")

#cuantas veces aparece la moda
max(tabulate(match(datos_puntuacion,unique(datos_puntuacion))))
max(tabulate(match(datos_puntuacion_duracion_larga,unique(datos_puntuacion_duracion_larga))))
max(tabulate(match(datos_puntuacion_duracion_corta,unique(datos_puntuacion_duracion_corta))))

#Dispersion

#rango y punto medio del rango
range(datos_puntuacion)
max(datos_puntuacion)-min(datos_puntuacion)

range(datos_puntuacion_duracion_larga)
max(datos_puntuacion_duracion_larga)-min(datos_puntuacion_duracion_larga)

range(datos_puntuacion_duracion_corta)
max(datos_puntuacion_duracion_corta)-min(datos_puntuacion_duracion_corta) 

# varianza
var(datos_puntuacion)
var(datos_puntuacion_duracion_larga)
var(datos_puntuacion_duracion_corta)

#desviacion tipica
sd(datos_puntuacion)
sd(datos_puntuacion_duracion_larga)
sd(datos_puntuacion_duracion_corta)

#coeficiente de variacion
sd(datos_puntuacion)/mean(datos_puntuacion)
sd(datos_puntuacion_duracion_larga)/mean(datos_puntuacion_duracion_larga)
sd(datos_puntuacion_duracion_corta)/mean(datos_puntuacion_duracion_corta)

#Localizacion

#resumen estadistico
summary(datos_puntuacion)
summary(datos_puntuacion_duracion_larga)
summary(datos_puntuacion_duracion_corta)


# rango intercuartilico entre Q1 Y Q3
IQR(datos_puntuacion)
IQR(datos_puntuacion_duracion_larga)
IQR(datos_puntuacion_duracion_corta)

#Forma

install.packages("e1071") 
library(e1071)

#coeficiente de asimetria
skewness(datos_puntuacion)
skewness(datos_puntuacion_duracion_larga) 
skewness(datos_puntuacion_duracion_corta) 


#kurtosis
kurtosis(datos_puntuacion)
kurtosis(datos_puntuacion_duracion_larga)
kurtosis(datos_puntuacion_duracion_corta)


#FRECUENCIAS

frecuencia_abs_puntuacion= table(cut(datos_puntuacion, breaks=c(0,4,6,8,10), right=FALSE, include.lowest=TRUE)) #frecuencia absoluta
cumsum(frecuencia_abs_puntuacion)  #frecuencia absoluta acumulada
frecuencia_relativa_puntuacion= round(prop.table(frecuencia_abs_puntuacion),2) #frecuencia relativa
cumsum(frecuencia_relativa_puntuacion)  #frecuencia relativa acumulada
h=hist(datos_puntuacion,breaks=c(0,4,6,8,10), plot=FALSE) #listas de informacion
h$mids  #punto medio de cada intervalo definido por break


frecuencia_abs_puntuacion_duracion_larga= table(cut(datos_puntuacion_duracion_larga, breaks=c(0,4,6,8,10), right=FALSE, include.lowest=TRUE)) #frecuencia absoluta
cumsum(frecuencia_abs_puntuacion_duracion_larga)  #frecuencia absoluta acumulada
frecuencia_relativa_puntuacion_larga= round(prop.table(frecuencia_abs_puntuacion_duracion_larga),2) #frecuencia relativa
cumsum(frecuencia_relativa_puntuacion_larga)  #frecuencia relativa acumulada
h=hist(datos_puntuacion_duracion_larga,breaks=c(0,4,6,8,10), plot=FALSE)#listas de informacion
h$mids  #punto medio de cada intervalo definido por break


frecuencia_abs_puntuacion_corta= table(cut(datos_puntuacion_duracion_corta, breaks=c(0,4,6,8,10), right=FALSE, include.lowest=TRUE)) #frecuencia absoluta
cumsum(frecuencia_abs_puntuacion_corta)  #frecuencia absoluta acumulada
frecuencia_relativa_puntuacion_corta= round(prop.table(frecuencia_abs_puntuacion_corta),2) #frecuencia relativa
cumsum(frecuencia_relativa_puntuacion_corta)  #frecuencia relativa acumulada
h=hist(datos_puntuacion_duracion_corta,breaks=c(0,4,6,8,10), plot=FALSE)#listas de informacion
h$mids  #punto medio de cada intervalo definido por break



#DIAGRAMAS

par(mfrow=c(1,3))# separacion del "canvas"

#diagrama de cajas y bigotes
boxplot(datos_puntuacion,ylim=c(0,10), main="Todos") 
boxplot(datos_puntuacion_duracion_larga,ylim=c(0,10), main="Los que duran mas de 120 min") 
boxplot(datos_puntuacion_duracion_corta, ylim=c(0,10), main="Los que duran menos de 120 min") 


par(mfrow=c(3,1)) #separacion del "canvas"

#histogramas
hist(datos_puntuacion, main="Todos") 
abline(v=mean(datos_puntuacion), lwd=2, lty=3, col="darkred") # linea que representa la media
hist(datos_puntuacion_duracion_larga, main="Los que duran mas de 120 min") 
abline(v=mean(datos_puntuacion_duracion_larga), lwd=2, lty=3, col="blue")  
hist(datos_puntuacion_duracion_corta, main="Los que duran menos de 120 min") 
abline(v=mean(datos_puntuacion_duracion_corta), lwd=2, lty=3, col="green") 

